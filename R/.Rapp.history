log_profit_effects
length(log_profit_effects)
log_profit_effects = c(-1,-0.1, 1, 3)
log_profit_effects
sum(log_profit_effects < -0.10)
log_profit_effects
sum(log_profit_effects <-0.10)
sum(log_profit_effects < -0.10)
log_profit_effects
dim(log_profit_effects)
dims(log_profit_effects)
nrow(log_profit_effects)
length(log_profit_effects)
length(initial_labor_mass)
f_effect_histogram = data.frame(seq(from=-0.11, to=0.10, by = 0.01))#
colnames(f_effect_histogram) = "effect_lower"#
f_effect_histogram$effect_upper = f_effect_histogram$effect_lower + 0.01#
f_effect_histogram[1,1] = -Inf#
f_effect_histogram[nrow(f_effect_histogram),2] = Inf#
f_effect_histogram$N_firms = NULL
f_effect_histogram
quantile(seq(from=0.001, to=0.999, by = 0.001), seq(from=0.05, to=0.95, by = 0.05))
a = quantile(seq(from=0.001, to=0.999, by = 0.001), seq(from=0.05, to=0.95, by = 0.05))
a
keys(a)
typeof(a)
a[1]
a[2]
a[2,1]
workers_combined$initial_wage = seq(from=0.0001, to=0.9999, by = 0.0001)
workers_combined_intial_wage = seq(from=0.0001, to=0.9999, by = 0.0001)
workers_combined_intial_wage
sample.int(100, 5)
num_jobs = 5
log_wage_0 = c(1,2,6,7,8)
log_wage_0[sample.int(num_jobs)]
log_wage_0[sample.int(num_jobs, replace=TRUE)]
?cor
test = as.dataframe(matrix(c(1,2,3,4,5,6), nrow=2))
test = as.data.frame(matrix(c(1,2,3,4,5,6), nrow=2))
test
colnames(test)[1] = "new-price"
test
test$new-price
test$`new-price`
test
test$new-price
test$`new-price`
test$`V2`
library(extraDistr)#
library(matrixStats)#
library(extraDistr)
install.packages("matrixStats")
library(mvtnorm) # Multivariate normals#
library(Matrix)#
library(extraDistr)#
library(matrixStats) # For logSumExp
install.package("mvtnorm")
install.packages("mvtnorm")
library(rcpp)
install.packages("Rcpp")
?solve
ls()
getwd()
setwd("/Users/wtownsend/Documents/GitHub/nev/R")
load_all()
